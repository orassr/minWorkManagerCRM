// <auto-generated />
using CRM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM.Data.Migrations
{
    [DbContext(typeof(EntitiesDbContext))]
    [Migration("20231117024834_Adjust1234")]
    partial class Adjust1234
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM.Entities.Business", b =>
                {
                    b.Property<int>("BusinessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessID"));

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantID")
                        .HasColumnType("int");

                    b.HasKey("BusinessID");

                    b.HasIndex("TenantID");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("CRM.Entities.Tenant", b =>
                {
                    b.Property<int>("TenantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenantID"));

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantID");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("CRM.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int>("TenantID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("TenantID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRM.Entities.UserBusiness", b =>
                {
                    b.Property<int>("UserBusinessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserBusinessID"));

                    b.Property<int>("BusinessID")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserBusinessID");

                    b.HasIndex("BusinessID");

                    b.HasIndex("UserID");

                    b.ToTable("UserBusinesses");
                });

            modelBuilder.Entity("CRM.Entities.Business", b =>
                {
                    b.HasOne("CRM.Entities.Tenant", "Tenant")
                        .WithMany("Businesses")
                        .HasForeignKey("TenantID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CRM.Entities.User", b =>
                {
                    b.HasOne("CRM.Entities.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CRM.Entities.UserBusiness", b =>
                {
                    b.HasOne("CRM.Entities.Business", "Business")
                        .WithMany("UserBusinesses")
                        .HasForeignKey("BusinessID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CRM.Entities.User", "User")
                        .WithMany("UserBusinesses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRM.Entities.Business", b =>
                {
                    b.Navigation("UserBusinesses");
                });

            modelBuilder.Entity("CRM.Entities.Tenant", b =>
                {
                    b.Navigation("Businesses");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRM.Entities.User", b =>
                {
                    b.Navigation("UserBusinesses");
                });
#pragma warning restore 612, 618
        }
    }
}
